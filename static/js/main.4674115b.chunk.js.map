{"version":3,"sources":["requests.js","axios.js","components/Row.js","components/Hero.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","requests","trending","topRated","actionMovies","comedyMovies","horrorMovies","romanceMovies","instance","axios","create","baseURL","Row","title","url","isHot","isRated","useState","movies","setMovies","useEffect","a","Axios","get","response","data","results","fetchMovies","className","map","movie","key","id","src","poster_path","backdrop_path","alt","vote_average","toFixed","Hero","fetchUrl","setMovie","localStorage","getItem","movieStore","JSON","parse","index","Math","floor","random","length","request","setItem","stringify","style","backgroundImage","backgroundSize","backgroundPosition","original_title","name","overview","Footer","href","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4674115b.chunk.js","sourcesContent":["const API_KEY = \"93bb2547795f9456dde5b78e79f8c84a\";\r\n\r\nconst requests = {\r\n  trending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  topRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  actionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  comedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  horrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  romanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"../axios\";\r\nimport \"../styles/Row.css\";\r\n\r\nconst imageBaseURL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({ title, url, isHot, isRated }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await Axios.get(url);\r\n      setMovies(response.data.results);\r\n      return response;\r\n    };\r\n    fetchMovies();\r\n  }, [url]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__images\">\r\n        {movies?.map((movie) => (\r\n          <div>\r\n            <img\r\n              key={movie.id}\r\n              src={`${imageBaseURL}${\r\n                isHot ? movie.poster_path : movie.backdrop_path\r\n              } `}\r\n              alt=\"movie?.title\"\r\n              className={`row__image ${isHot && \"row__imageHot\"}`}\r\n            />\r\n            <div className={isRated ? \"row__ratings\" : \"hide\"} key={movie.id}>\r\n              <p>{isRated && movie.vote_average.toFixed(1)}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"../axios\";\r\nimport \"../styles/Hero.css\";\r\n\r\nconst imageBaseURL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Hero = ({ fetchUrl }) => {\r\n  const [movie, setMovie] = useState({});\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"movies\")) {\r\n      const movieStore = JSON.parse(localStorage.getItem(\"movies\"));\r\n      const index = Math.floor(Math.random() * movieStore.length - 1);\r\n      setMovie(movieStore[index]);\r\n      return movieStore;\r\n    } else {\r\n      const fetchMovies = async () => {\r\n        const request = await Axios.get(fetchUrl);\r\n        const response = request?.data.results;\r\n        const index = Math.floor(Math.random() * response.length - 1);\r\n        localStorage.setItem(\"movies\", JSON.stringify(response));\r\n        setMovie(response[index]);\r\n        return response;\r\n      };\r\n      fetchMovies();\r\n    }\r\n  }, [fetchUrl]);\r\n\r\n  return (\r\n    <div\r\n      className=\"hero\"\r\n      style={{\r\n        backgroundImage: `url(${imageBaseURL + movie?.backdrop_path})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"hero__info\">\r\n        <h1>{movie?.title || movie?.original_title || movie?.name}</h1>\r\n        <h4 className=\"hero__overview\">{movie.overview}</h4>\r\n        <button className=\"hero__button\">try 1 week free</button>\r\n      </div>\r\n      <div className=\"hero__overlay\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport \"../styles/Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>\r\n        All rights reserved | made with <i className=\"fa fa-heart\"></i> by {\"\"}\r\n        <a href=\"http://rayced.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          ray\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport requests from \"./requests\";\nimport Row from \"./components/Row\";\nimport Hero from \"./components/Hero\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Hero fetchUrl={requests.trending} />\n      <Row title=\"HOT ðŸ”¥\" url={requests.trending} isHot />\n      <Row title=\"Top Rated\" url={requests.topRated} isRated />\n      <Row title=\"Action Movies\" url={requests.actionMovies} />\n      <Row title=\"Comedy Movies\" url={requests.comedyMovies} />\n      <Row title=\"Horror Movies\" url={requests.horrorMovies} />\n      <Row title=\"Romance Movies\" url={requests.romanceMovies} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}